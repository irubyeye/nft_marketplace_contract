// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Buy extends ethereum.Event {
  get params(): Buy__Params {
    return new Buy__Params(this);
  }
}

export class Buy__Params {
  _event: Buy;

  constructor(event: Buy) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get orderPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BuyOrderAccepted extends ethereum.Event {
  get params(): BuyOrderAccepted__Params {
    return new BuyOrderAccepted__Params(this);
  }
}

export class BuyOrderAccepted__Params {
  _event: BuyOrderAccepted;

  constructor(event: BuyOrderAccepted) {
    this._event = event;
  }

  get buyOrderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class BuyOrderCreated extends ethereum.Event {
  get params(): BuyOrderCreated__Params {
    return new BuyOrderCreated__Params(this);
  }
}

export class BuyOrderCreated__Params {
  _event: BuyOrderCreated;

  constructor(event: BuyOrderCreated) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sellOrderId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get proposedPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get buyOrderId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BuyOrderRejected extends ethereum.Event {
  get params(): BuyOrderRejected__Params {
    return new BuyOrderRejected__Params(this);
  }
}

export class BuyOrderRejected__Params {
  _event: BuyOrderRejected;

  constructor(event: BuyOrderRejected) {
    this._event = event;
  }

  get buyOrderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class BuyOrderRetracted extends ethereum.Event {
  get params(): BuyOrderRetracted__Params {
    return new BuyOrderRetracted__Params(this);
  }
}

export class BuyOrderRetracted__Params {
  _event: BuyOrderRetracted;

  constructor(event: BuyOrderRetracted) {
    this._event = event;
  }

  get buyOrderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Sell extends ethereum.Event {
  get params(): Sell__Params {
    return new Sell__Params(this);
  }
}

export class Sell__Params {
  _event: Sell;

  constructor(event: Sell) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get orderPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class SellItemCreated extends ethereum.Event {
  get params(): SellItemCreated__Params {
    return new SellItemCreated__Params(this);
  }
}

export class SellItemCreated__Params {
  _event: SellItemCreated;

  constructor(event: SellItemCreated) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get initPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get orderId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SellItemRetracted extends ethereum.Event {
  get params(): SellItemRetracted__Params {
    return new SellItemRetracted__Params(this);
  }
}

export class SellItemRetracted__Params {
  _event: SellItemRetracted;

  constructor(event: SellItemRetracted) {
    this._event = event;
  }

  get sellItemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Marketplace__buyOrdersResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: Address;
  value4: boolean;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: Address,
    value4: boolean,
    value5: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getBuyOrderId(): BigInt {
    return this.value0;
  }

  getSellOrderId(): BigInt {
    return this.value1;
  }

  getProposedPrice(): BigInt {
    return this.value2;
  }

  getBuyer(): Address {
    return this.value3;
  }

  getIsRejected(): boolean {
    return this.value4;
  }

  getIsClosed(): boolean {
    return this.value5;
  }
}

export class Marketplace__sellItemsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: Address;
  value4: Address;
  value5: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: Address,
    value4: Address,
    value5: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getProposalId(): BigInt {
    return this.value0;
  }

  getTokenId(): BigInt {
    return this.value1;
  }

  getInitPrice(): BigInt {
    return this.value2;
  }

  getNftOwner(): Address {
    return this.value3;
  }

  getTokenAddress(): Address {
    return this.value4;
  }

  getIsForSale(): boolean {
    return this.value5;
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }

  balances(param0: Address): BigInt {
    let result = super.call("balances", "balances(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_balances(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balances", "balances(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buyOrders(param0: BigInt): Marketplace__buyOrdersResult {
    let result = super.call(
      "buyOrders",
      "buyOrders(uint256):(uint256,uint256,uint256,address,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new Marketplace__buyOrdersResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toBoolean(),
      result[5].toBoolean(),
    );
  }

  try_buyOrders(
    param0: BigInt,
  ): ethereum.CallResult<Marketplace__buyOrdersResult> {
    let result = super.tryCall(
      "buyOrders",
      "buyOrders(uint256):(uint256,uint256,uint256,address,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__buyOrdersResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toBoolean(),
        value[5].toBoolean(),
      ),
    );
  }

  lockedAmount(param0: Address): BigInt {
    let result = super.call("lockedAmount", "lockedAmount(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_lockedAmount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lockedAmount",
      "lockedAmount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sellItems(param0: BigInt): Marketplace__sellItemsResult {
    let result = super.call(
      "sellItems",
      "sellItems(uint256):(uint256,uint256,uint256,address,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new Marketplace__sellItemsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toBoolean(),
    );
  }

  try_sellItems(
    param0: BigInt,
  ): ethereum.CallResult<Marketplace__sellItemsResult> {
    let result = super.tryCall(
      "sellItems",
      "sellItems(uint256):(uint256,uint256,uint256,address,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__sellItemsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toAddress(),
        value[4].toAddress(),
        value[5].toBoolean(),
      ),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptBuyOrderCall extends ethereum.Call {
  get inputs(): AcceptBuyOrderCall__Inputs {
    return new AcceptBuyOrderCall__Inputs(this);
  }

  get outputs(): AcceptBuyOrderCall__Outputs {
    return new AcceptBuyOrderCall__Outputs(this);
  }
}

export class AcceptBuyOrderCall__Inputs {
  _call: AcceptBuyOrderCall;

  constructor(call: AcceptBuyOrderCall) {
    this._call = call;
  }

  get _buyOrderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptBuyOrderCall__Outputs {
  _call: AcceptBuyOrderCall;

  constructor(call: AcceptBuyOrderCall) {
    this._call = call;
  }
}

export class CreateBuyOrderCall extends ethereum.Call {
  get inputs(): CreateBuyOrderCall__Inputs {
    return new CreateBuyOrderCall__Inputs(this);
  }

  get outputs(): CreateBuyOrderCall__Outputs {
    return new CreateBuyOrderCall__Outputs(this);
  }
}

export class CreateBuyOrderCall__Inputs {
  _call: CreateBuyOrderCall;

  constructor(call: CreateBuyOrderCall) {
    this._call = call;
  }

  get _sellOrderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _proposedPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateBuyOrderCall__Outputs {
  _call: CreateBuyOrderCall;

  constructor(call: CreateBuyOrderCall) {
    this._call = call;
  }
}

export class CreateSellItemCall extends ethereum.Call {
  get inputs(): CreateSellItemCall__Inputs {
    return new CreateSellItemCall__Inputs(this);
  }

  get outputs(): CreateSellItemCall__Outputs {
    return new CreateSellItemCall__Outputs(this);
  }
}

export class CreateSellItemCall__Inputs {
  _call: CreateSellItemCall;

  constructor(call: CreateSellItemCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _initPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateSellItemCall__Outputs {
  _call: CreateSellItemCall;

  constructor(call: CreateSellItemCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class RejectBuyOrderCall extends ethereum.Call {
  get inputs(): RejectBuyOrderCall__Inputs {
    return new RejectBuyOrderCall__Inputs(this);
  }

  get outputs(): RejectBuyOrderCall__Outputs {
    return new RejectBuyOrderCall__Outputs(this);
  }
}

export class RejectBuyOrderCall__Inputs {
  _call: RejectBuyOrderCall;

  constructor(call: RejectBuyOrderCall) {
    this._call = call;
  }

  get _buyOrderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RejectBuyOrderCall__Outputs {
  _call: RejectBuyOrderCall;

  constructor(call: RejectBuyOrderCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RetractBuyOrderCall extends ethereum.Call {
  get inputs(): RetractBuyOrderCall__Inputs {
    return new RetractBuyOrderCall__Inputs(this);
  }

  get outputs(): RetractBuyOrderCall__Outputs {
    return new RetractBuyOrderCall__Outputs(this);
  }
}

export class RetractBuyOrderCall__Inputs {
  _call: RetractBuyOrderCall;

  constructor(call: RetractBuyOrderCall) {
    this._call = call;
  }

  get _buyOrderId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RetractBuyOrderCall__Outputs {
  _call: RetractBuyOrderCall;

  constructor(call: RetractBuyOrderCall) {
    this._call = call;
  }
}

export class RetractSellItemCall extends ethereum.Call {
  get inputs(): RetractSellItemCall__Inputs {
    return new RetractSellItemCall__Inputs(this);
  }

  get outputs(): RetractSellItemCall__Outputs {
    return new RetractSellItemCall__Outputs(this);
  }
}

export class RetractSellItemCall__Inputs {
  _call: RetractSellItemCall;

  constructor(call: RetractSellItemCall) {
    this._call = call;
  }

  get _sellItemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RetractSellItemCall__Outputs {
  _call: RetractSellItemCall;

  constructor(call: RetractSellItemCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
